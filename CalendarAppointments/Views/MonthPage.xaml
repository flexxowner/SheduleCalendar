<Page
    x:Class="CalendarAppointments.Views.MonthPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models1="using:CalendarAppointments.Models.Models"
    xmlns:vm ="using:CalendarAppointments.ViewModel.ViewModels"
    Style="{StaticResource PageStyle}"
    x:Name="month"
    mc:Ignorable="d">
    <Page.Resources>
        <Color x:Key="AppMidColor">#737272</Color>
        <SolidColorBrush x:Key="AppMidBrush" Color="{StaticResource AppMidColor}"/>
        <Style x:Key="RowLine" TargetType="Border">
            <Setter Property="Grid.ColumnSpan" Value="7"/>
            <Setter Property="BorderBrush" Value="{StaticResource AppMidBrush}"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
        </Style>
        <Style x:Key="ColumnLine" TargetType="Border">
            <Setter Property="Grid.RowSpan" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource AppMidBrush}"/>
            <Setter Property="BorderThickness" Value="0 0 1 0"/>
        </Style>
        <Style x:Key="DayOfWeeksyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource AppMidBrush}"/>
        </Style>
    </Page.Resources>
    
    <Page.DataContext>
        <vm:MonthViewModel/>
    </Page.DataContext>

    <Grid x:Name="ContentArea"  d:DataContext="{StaticResource DesignData}">
        <Grid
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" Width="{Binding ElementName=month, Path=ActualWidth}">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.08*"/>
                <RowDefinition Height="0.08*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="2" Width="{Binding ElementName=month, Path=ActualWidth}" Height="{Binding ElementName=month, Path=ActualHeight}">
                <RelativePanel>
                    <Popup x:Name="EventPopUp" Height="850" Width="300" IsOpen="{Binding IsOpen, Mode=OneWay}" RelativePanel.AlignLeftWithPanel="True" IsLightDismissEnabled="True" LightDismissOverlayMode="On">
                        <StackPanel Orientation="Vertical" Background="Gray" Height="{Binding ElementName=EventPopUp, Path=ActualHeight}" Width="{Binding ElementName=EventPopUp, Path=ActualWidth}">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Title:" FontSize="15" Height="Auto" Width="Auto"/>
                                    <TextBox Text="{Binding EventSubject, Mode = TwoWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Start Time:" Height="Auto" Width="Auto" FontSize="15"/>
                                    <TimePicker Time="{Binding StartTime, Mode=TwoWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="End Time:" Height="Auto" Width="Auto" FontSize="15"/>
                                    <TimePicker Time="{Binding EndTime, Mode=TwoWay}"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <Button Content="Save" Command="{x:Bind ViewModel.AddEventCommand}"/>
                            </StackPanel>
                        </StackPanel>
                    </Popup>
                </RelativePanel>
                <GridView x:Name="Cell" ItemsSource="{x:Bind ViewModel.CalendarDays}" Width="{Binding ElementName=month, Path=ActualWidth}" Height="{Binding ElementName=month, Path=ActualHeight}" SelectedItem="{x:Bind ViewModel.SelectedDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DoubleTapped="{x:Bind ViewModel.HandleDoubleTapped}">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="models1:MonthDay">
                            <Grid Width="165" Height="160">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.2*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Date.Day}"/>
                                    </StackPanel>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <ListView ItemsSource="{Binding Events, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate x:DataType="models1:Event">
                                                <Border Background="Green">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <TextBlock Text="{Binding StartTimeString}" Foreground="White"/>
                                                        <TextBlock Text="{Binding Subject}" Foreground="White"/>
                                                    </StackPanel>
                                                </Border>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </Grid>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <StackPanel Orientation="Horizontal" Width="155">
                        <Button Content="Next" Command="{x:Bind ViewModel.GoForwardCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto"  />
                        <Button Content="Prev" Command="{x:Bind ViewModel.GoBackCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1">
                    <GridView ItemsSource="{x:Bind ViewModel.Months}" Height="Auto" Width="Auto">
                        <GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="Width" Value="Auto"/>
                            </Style>
                        </GridView.ItemContainerStyle>
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="models1:CalendarMonth">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="5">
                                    <TextBlock Text="{Binding Month, Mode=OneWay}" Height="Auto" Width="Auto" Style="{StaticResource DayOfWeeksyle}" FontSize="20"/>
                                    <TextBlock Text="{Binding Year, Mode=OneWay}" Height="Auto" Width="Auto" Style="{StaticResource DayOfWeeksyle}" FontSize="22" />
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Margin="0,0" Width="{Binding ElementName=month, Path=ActualWidth}" Height="{Binding ElementName=month, Path=ActualHeight}" >
                <GridView ItemsSource="{x:Bind ViewModel.DaysOfWeeks, Mode=OneWay}">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="models1:DayOfWeek">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding WeekDay}"  Style="{StaticResource DayOfWeeksyle}" Height="Auto" Width="165" HorizontalAlignment="Center" TextAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </Grid>
        </Grid>
    </Grid>
</Page>
